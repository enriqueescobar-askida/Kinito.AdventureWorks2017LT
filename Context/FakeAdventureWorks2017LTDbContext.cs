// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Context
{
    using Configurations;
    using Entities;
    using Interfaces;
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FakeAdventureWorks2017LTDbContext : IAdventureWorks2017LTDbContext
    {
        public System.Data.Entity.DbSet<BuildVersion> BuildVersions { get; set; }
        public System.Data.Entity.DbSet<ErrorLog> ErrorLogs { get; set; }
        public System.Data.Entity.DbSet<SalesLT_Address> SalesLT_Addresses { get; set; }
        public System.Data.Entity.DbSet<SalesLT_Customer> SalesLT_Customers { get; set; }
        public System.Data.Entity.DbSet<SalesLT_CustomerAddress> SalesLT_CustomerAddresses { get; set; }
        public System.Data.Entity.DbSet<SalesLT_Product> SalesLT_Products { get; set; }
        public System.Data.Entity.DbSet<SalesLT_ProductCategory> SalesLT_ProductCategories { get; set; }
        public System.Data.Entity.DbSet<SalesLT_ProductDescription> SalesLT_ProductDescriptions { get; set; }
        public System.Data.Entity.DbSet<SalesLT_ProductModel> SalesLT_ProductModels { get; set; }
        public System.Data.Entity.DbSet<SalesLT_ProductModelProductDescription> SalesLT_ProductModelProductDescriptions { get; set; }
        public System.Data.Entity.DbSet<SalesLT_SalesOrderDetail> SalesLT_SalesOrderDetails { get; set; }
        public System.Data.Entity.DbSet<SalesLT_SalesOrderHeader> SalesLT_SalesOrderHeaders { get; set; }
        public System.Data.Entity.DbSet<SalesLT_VGetAllCategory> SalesLT_VGetAllCategories { get; set; }
        public System.Data.Entity.DbSet<SalesLT_VProductAndDescription> SalesLT_VProductAndDescriptions { get; set; }
        public System.Data.Entity.DbSet<SalesLT_VProductModelCatalogDescription> SalesLT_VProductModelCatalogDescriptions { get; set; }

        public FakeAdventureWorks2017LTDbContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;

            BuildVersions = new FakeDbSet<BuildVersion>("SystemInformationId", "DatabaseVersion", "VersionDate", "ModifiedDate");
            ErrorLogs = new FakeDbSet<ErrorLog>("ErrorLogId");
            SalesLT_Addresses = new FakeDbSet<SalesLT_Address>("AddressId");
            SalesLT_Customers = new FakeDbSet<SalesLT_Customer>("CustomerId");
            SalesLT_CustomerAddresses = new FakeDbSet<SalesLT_CustomerAddress>("CustomerId", "AddressId");
            SalesLT_Products = new FakeDbSet<SalesLT_Product>("ProductId");
            SalesLT_ProductCategories = new FakeDbSet<SalesLT_ProductCategory>("ProductCategoryId");
            SalesLT_ProductDescriptions = new FakeDbSet<SalesLT_ProductDescription>("ProductDescriptionId");
            SalesLT_ProductModels = new FakeDbSet<SalesLT_ProductModel>("ProductModelId");
            SalesLT_ProductModelProductDescriptions = new FakeDbSet<SalesLT_ProductModelProductDescription>("ProductModelId", "ProductDescriptionId", "Culture");
            SalesLT_SalesOrderDetails = new FakeDbSet<SalesLT_SalesOrderDetail>("SalesOrderId", "SalesOrderDetailId");
            SalesLT_SalesOrderHeaders = new FakeDbSet<SalesLT_SalesOrderHeader>("SalesOrderId");
            SalesLT_VGetAllCategories = new FakeDbSet<SalesLT_VGetAllCategory>("ParentProductCategoryName");
            SalesLT_VProductAndDescriptions = new FakeDbSet<SalesLT_VProductAndDescription>("ProductId", "Name", "ProductModel", "Culture", "Description");
            SalesLT_VProductModelCatalogDescriptions = new FakeDbSet<SalesLT_VProductModelCatalogDescription>("ProductModelId", "Name", "Rowguid", "ModifiedDate");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public int UspLogError(out int? errorLogId)
        {
            errorLogId = default(int);

            return 0;
        }

        public int UspPrintError()
        {

            return 0;
        }

        // Table Valued Functions
        [System.Data.Entity.DbFunction("AdventureWorks2017LTDbContext", "ufnGetAllCategories")]
        public IQueryable<UfnGetAllCategoriesReturnModel> UfnGetAllCategories()
        {
            return new System.Collections.Generic.List<UfnGetAllCategoriesReturnModel>().AsQueryable();
        }

        [System.Data.Entity.DbFunction("AdventureWorks2017LTDbContext", "ufnGetCustomerInformation")]
        public IQueryable<UfnGetCustomerInformationReturnModel> UfnGetCustomerInformation(int? customerId)
        {
            return new System.Collections.Generic.List<UfnGetCustomerInformationReturnModel>().AsQueryable();
        }

    }
}
// </auto-generated>
