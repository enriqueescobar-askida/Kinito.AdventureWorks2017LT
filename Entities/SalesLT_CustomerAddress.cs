// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // CustomerAddress
    ///<summary>
    /// Cross-reference table mapping customers to their address(es).
    ///</summary>
    [Table("CustomerAddress", Schema = "SalesLT")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class SalesLT_CustomerAddress
    {

        ///<summary>
        /// Primary key. Foreign key to Customer.CustomerID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"CustomerID", Order = 1, TypeName = "int")]
        [Index(@"PK_CustomerAddress_CustomerID_AddressID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Customer ID")]
        public int CustomerId { get; set; } // CustomerID (Primary key)

        ///<summary>
        /// Primary key. Foreign key to Address.AddressID.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"AddressID", Order = 2, TypeName = "int")]
        [Index(@"PK_CustomerAddress_CustomerID_AddressID", 2, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Address ID")]
        public int AddressId { get; set; } // AddressID (Primary key)

        ///<summary>
        /// The kind of Address. One of: Archive, Billing, Home, Main Office, Primary, Shipping
        ///</summary>
        [Column(@"AddressType", Order = 3, TypeName = "nvarchar")]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Address type")]
        public string AddressType { get; set; } // AddressType (length: 50)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 4, TypeName = "uniqueidentifier")]
        [Index(@"AK_CustomerAddress_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent SalesLT_Address pointed by [CustomerAddress].([AddressId]) (FK_CustomerAddress_Address_AddressID)
        /// </summary>
        [ForeignKey("AddressId"), Required] public virtual SalesLT_Address SalesLT_Address { get; set; } // FK_CustomerAddress_Address_AddressID

        /// <summary>
        /// Parent SalesLT_Customer pointed by [CustomerAddress].([CustomerId]) (FK_CustomerAddress_Customer_CustomerID)
        /// </summary>
        [ForeignKey("CustomerId"), Required] public virtual SalesLT_Customer SalesLT_Customer { get; set; } // FK_CustomerAddress_Customer_CustomerID

        public SalesLT_CustomerAddress()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
        }
    }

}
// </auto-generated>
