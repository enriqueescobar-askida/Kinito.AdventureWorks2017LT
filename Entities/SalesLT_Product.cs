// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // Product
    ///<summary>
    /// Products sold or used in the manfacturing of sold products.
    ///</summary>
    [Table("Product", Schema = "SalesLT")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class SalesLT_Product
    {

        ///<summary>
        /// Primary key for Product records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductID", Order = 1, TypeName = "int")]
        [Index(@"PK_Product_ProductID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product ID")]
        public int ProductId { get; set; } // ProductID (Primary key)

        ///<summary>
        /// Name of the product.
        ///</summary>
        [Column(@"Name", Order = 2, TypeName = "nvarchar")]
        [Index(@"AK_Product_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Unique product identification number.
        ///</summary>
        [Column(@"ProductNumber", Order = 3, TypeName = "nvarchar")]
        [Index(@"AK_Product_ProductNumber", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Product number")]
        public string ProductNumber { get; set; } // ProductNumber (length: 25)

        ///<summary>
        /// Product color.
        ///</summary>
        [Column(@"Color", Order = 4, TypeName = "nvarchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Color")]
        public string Color { get; set; } // Color (length: 15)

        ///<summary>
        /// Standard cost of the product.
        ///</summary>
        [Column(@"StandardCost", Order = 5, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "Standard cost")]
        public decimal StandardCost { get; set; } // StandardCost

        ///<summary>
        /// Selling price.
        ///</summary>
        [Column(@"ListPrice", Order = 6, TypeName = "money")]
        [Required]
        [DataType(DataType.Currency)]
        [Display(Name = "List price")]
        public decimal ListPrice { get; set; } // ListPrice

        ///<summary>
        /// Product size.
        ///</summary>
        [Column(@"Size", Order = 7, TypeName = "nvarchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Size")]
        public string Size { get; set; } // Size (length: 5)

        ///<summary>
        /// Product weight.
        ///</summary>
        [Column(@"Weight", Order = 8, TypeName = "decimal")]
        [Display(Name = "Weight")]
        public decimal? Weight { get; set; } // Weight

        ///<summary>
        /// Product is a member of this product category. Foreign key to ProductCategory.ProductCategoryID.
        ///</summary>
        [Column(@"ProductCategoryID", Order = 9, TypeName = "int")]
        [Display(Name = "Product category ID")]
        public int? ProductCategoryId { get; set; } // ProductCategoryID

        ///<summary>
        /// Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
        ///</summary>
        [Column(@"ProductModelID", Order = 10, TypeName = "int")]
        [Display(Name = "Product model ID")]
        public int? ProductModelId { get; set; } // ProductModelID

        ///<summary>
        /// Date the product was available for sale.
        ///</summary>
        [Column(@"SellStartDate", Order = 11, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Sell start date")]
        public System.DateTime SellStartDate { get; set; } // SellStartDate

        ///<summary>
        /// Date the product was no longer available for sale.
        ///</summary>
        [Column(@"SellEndDate", Order = 12, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Sell end date")]
        public System.DateTime? SellEndDate { get; set; } // SellEndDate

        ///<summary>
        /// Date the product was discontinued.
        ///</summary>
        [Column(@"DiscontinuedDate", Order = 13, TypeName = "datetime")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Discontinued date")]
        public System.DateTime? DiscontinuedDate { get; set; } // DiscontinuedDate

        ///<summary>
        /// Small image of the product.
        ///</summary>
        [Column(@"ThumbNailPhoto", Order = 14, TypeName = "varbinary(max)")]
        [Display(Name = "Thumb nail photo")]
        public byte[] ThumbNailPhoto { get; set; } // ThumbNailPhoto

        ///<summary>
        /// Small image file name.
        ///</summary>
        [Column(@"ThumbnailPhotoFileName", Order = 15, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Thumbnail photo file name")]
        public string ThumbnailPhotoFileName { get; set; } // ThumbnailPhotoFileName (length: 50)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 16, TypeName = "uniqueidentifier")]
        [Index(@"AK_Product_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 17, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child SalesLT_SalesOrderDetails where [SalesOrderDetail].[ProductID] point to this entity (FK_SalesOrderDetail_Product_ProductID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesLT_SalesOrderDetail> SalesLT_SalesOrderDetails { get; set; } // SalesOrderDetail.FK_SalesOrderDetail_Product_ProductID

        // Foreign keys

        /// <summary>
        /// Parent SalesLT_ProductCategory pointed by [Product].([ProductCategoryId]) (FK_Product_ProductCategory_ProductCategoryID)
        /// </summary>
        [ForeignKey("ProductCategoryId")] public virtual SalesLT_ProductCategory SalesLT_ProductCategory { get; set; } // FK_Product_ProductCategory_ProductCategoryID

        /// <summary>
        /// Parent SalesLT_ProductModel pointed by [Product].([ProductModelId]) (FK_Product_ProductModel_ProductModelID)
        /// </summary>
        [ForeignKey("ProductModelId")] public virtual SalesLT_ProductModel SalesLT_ProductModel { get; set; } // FK_Product_ProductModel_ProductModelID

        public SalesLT_Product()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            SalesLT_SalesOrderDetails = new System.Collections.Generic.List<SalesLT_SalesOrderDetail>();
        }
    }

}
// </auto-generated>
