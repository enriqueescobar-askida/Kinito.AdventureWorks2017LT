// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // ProductCategory
    ///<summary>
    /// High-level product categorization.
    ///</summary>
    [Table("ProductCategory", Schema = "SalesLT")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class SalesLT_ProductCategory
    {

        ///<summary>
        /// Primary key for ProductCategory records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ProductCategoryID", Order = 1, TypeName = "int")]
        [Index(@"PK_ProductCategory_ProductCategoryID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Product category ID")]
        public int ProductCategoryId { get; set; } // ProductCategoryID (Primary key)

        ///<summary>
        /// Product category identification number of immediate ancestor category. Foreign key to ProductCategory.ProductCategoryID.
        ///</summary>
        [Column(@"ParentProductCategoryID", Order = 2, TypeName = "int")]
        [Display(Name = "Parent product category ID")]
        public int? ParentProductCategoryId { get; set; } // ParentProductCategoryID

        ///<summary>
        /// Category description.
        ///</summary>
        [Column(@"Name", Order = 3, TypeName = "nvarchar")]
        [Index(@"AK_ProductCategory_Name", 1, IsUnique = true, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 4, TypeName = "uniqueidentifier")]
        [Index(@"AK_ProductCategory_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 5, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child SalesLT_Products where [Product].[ProductCategoryID] point to this entity (FK_Product_ProductCategory_ProductCategoryID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesLT_Product> SalesLT_Products { get; set; } // Product.FK_Product_ProductCategory_ProductCategoryID
        /// <summary>
        /// Child SalesLT_ProductCategories where [ProductCategory].[ParentProductCategoryID] point to this entity (FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesLT_ProductCategory> SalesLT_ProductCategories { get; set; } // ProductCategory.FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID

        // Foreign keys

        /// <summary>
        /// Parent SalesLT_ProductCategory pointed by [ProductCategory].([ParentProductCategoryId]) (FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID)
        /// </summary>
        [ForeignKey("ParentProductCategoryId")] public virtual SalesLT_ProductCategory ParentProductCategory { get; set; } // FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID

        public SalesLT_ProductCategory()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            SalesLT_Products = new System.Collections.Generic.List<SalesLT_Product>();
            SalesLT_ProductCategories = new System.Collections.Generic.List<SalesLT_ProductCategory>();
        }
    }

}
// </auto-generated>
