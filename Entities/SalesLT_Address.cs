// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Entities
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;

    // Address
    ///<summary>
    /// Street address information for customers.
    ///</summary>
    [Table("Address", Schema = "SalesLT")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class SalesLT_Address
    {

        ///<summary>
        /// Primary key for Address records.
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"AddressID", Order = 1, TypeName = "int")]
        [Index(@"PK_Address_AddressID", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Address ID")]
        public int AddressId { get; set; } // AddressID (Primary key)

        ///<summary>
        /// First street address line.
        ///</summary>
        [Column(@"AddressLine1", Order = 2, TypeName = "nvarchar")]
        [Index(@"IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion", 1, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Address line 1")]
        public string AddressLine1 { get; set; } // AddressLine1 (length: 60)

        ///<summary>
        /// Second street address line.
        ///</summary>
        [Column(@"AddressLine2", Order = 3, TypeName = "nvarchar")]
        [Index(@"IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion", 2, IsUnique = false, IsClustered = false)]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Address line 2")]
        public string AddressLine2 { get; set; } // AddressLine2 (length: 60)

        ///<summary>
        /// Name of the city.
        ///</summary>
        [Column(@"City", Order = 4, TypeName = "nvarchar")]
        [Index(@"IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion", 3, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 30)

        ///<summary>
        /// Name of state or province.
        ///</summary>
        [Column(@"StateProvince", Order = 5, TypeName = "nvarchar")]
        [Index(@"IX_Address_StateProvince", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion", 4, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "State province")]
        public string StateProvince { get; set; } // StateProvince (length: 50)

        [Column(@"CountryRegion", Order = 6, TypeName = "nvarchar")]
        [Index(@"IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion", 6, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Country region")]
        public string CountryRegion { get; set; } // CountryRegion (length: 50)

        ///<summary>
        /// Postal code for the street address.
        ///</summary>
        [Column(@"PostalCode", Order = 7, TypeName = "nvarchar")]
        [Index(@"IX_Address_AddressLine1_AddressLine2_City_StateProvince_PostalCode_CountryRegion", 5, IsUnique = false, IsClustered = false)]
        [Required(AllowEmptyStrings = true)]
        [MaxLength(15)]
        [StringLength(15)]
        [DataType(DataType.PostalCode)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 15)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        [Column(@"rowguid", Order = 8, TypeName = "uniqueidentifier")]
        [Index(@"AK_Address_rowguid", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        [Column(@"ModifiedDate", Order = 9, TypeName = "datetime")]
        [Required]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child SalesLT_CustomerAddresses where [CustomerAddress].[AddressID] point to this entity (FK_CustomerAddress_Address_AddressID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesLT_CustomerAddress> SalesLT_CustomerAddresses { get; set; } // CustomerAddress.FK_CustomerAddress_Address_AddressID
        /// <summary>
        /// Child SalesLT_SalesOrderHeaders where [SalesOrderHeader].[BillToAddressID] point to this entity (FK_SalesOrderHeader_Address_BillTo_AddressID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesLT_SalesOrderHeader> SalesLT_SalesOrderHeaders_BillToAddressId { get; set; } // SalesOrderHeader.FK_SalesOrderHeader_Address_BillTo_AddressID
        /// <summary>
        /// Child SalesLT_SalesOrderHeaders where [SalesOrderHeader].[ShipToAddressID] point to this entity (FK_SalesOrderHeader_Address_ShipTo_AddressID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesLT_SalesOrderHeader> SalesLT_SalesOrderHeaders_ShipToAddressId { get; set; } // SalesOrderHeader.FK_SalesOrderHeader_Address_ShipTo_AddressID

        public SalesLT_Address()
        {
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            SalesLT_CustomerAddresses = new System.Collections.Generic.List<SalesLT_CustomerAddress>();
            SalesLT_SalesOrderHeaders_BillToAddressId = new System.Collections.Generic.List<SalesLT_SalesOrderHeader>();
            SalesLT_SalesOrderHeaders_ShipToAddressId = new System.Collections.Generic.List<SalesLT_SalesOrderHeader>();
        }
    }

}
// </auto-generated>
